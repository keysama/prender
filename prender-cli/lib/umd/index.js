!function(e){"function"==typeof define&&define.amd?define(e):e()}(function(){"use strict";const e=require("commander"),x=require("path"),b=require("fs"),o=require("cli-table2"),v=require("./prender.js"),S=require("chalk"),{compress:z,deleteFolder:A}=require("./tools");let I=new o({head:["path","mode"],colWidths:[20,20]}),W=new o({head:["path","mode","depent","status"],colWidths:[20,20,20,20]});e.version("1.2.4"),e.command("build [routes...]").description("run to rerender all routes with mode").option("-p --port [port]","临时服务端口号",8098).option("-t --target [target]","目标路径",x.join(process.cwd(),"./target")).option("-d --delta  [delta]","增量更新输出目录",x.join(process.cwd(),"./delta")).option("-o --output [output]","全量更新输出目录",x.join(process.cwd(),"./output")).option("-f --file [file]","指定包含routes和mode的文件位置",x.join(process.cwd(),"./prender_routes.json")).option("-e --exclude [exclude...]","忽略的文件",".DS_Store").option("-s --show","是否显示浏览器",!1).option("-i --incremental","开启增量更新模式",!1).option("-c --clear","开始前删除输出目录",!1).option("-z --zip","输出压缩文件",!1).option("-m --mode [mode...]","输出模式[json/inject/default]",["default"]).option("--timeout [timeout]","单个路由渲染时限,0不限制",0).option("--pool [pool]","允许同时渲染最大数量",5).option("--debug","debug模式，不自动关闭",!1).action(async(e,o)=>{const{file:t,mode:r,port:n,target:i,delta:s,output:p,show:d,incremental:l,exclude:a,debug:c,clear:u,zip:m,timeout:h,pool:g}=o;let f=[];if("string"==typeof r)f=e.map(e=>({path:e,mode:r}));else{if(r.length!==e.length&&1!==r.length)return console.log(S.red("illegal mode options")),!1;f=e.map((e,o)=>({path:e,mode:r[o]||r[0]}))}if(f.length<=0&&!b.existsSync(t)&&console.log(S.red("no routes to render")),f.length<=0&&b.existsSync(t)){let e=require(x.resolve(process.cwd(),t));f=Array.isArray(e)?e.map(e=>({path:e,mode:r[0]})):e}u&&(A(p),A(s),A(p+".zip")),I.push(...f.map((e,o)=>[e.path,e.mode])),process.stdout.write(I.toString()+"\n");var w,j,e=(w=["\\","|","/","-"],j=0,setInterval(function(){process.stdout.write("\r"+w[j++]),j&=3},100));const q=new v({routes:f,port:n,target:i,delta:s,output:p,show:d,incremental:l,exclude:a,timeout:h,pool:g,debug:c}),y=await q.start();if(m)try{l?await z(s):await z(p)}catch(e){throw new Error(S.red("compress error"))}process.stdout.write("\n"),clearInterval(e),W.push(...f.map((e,o)=>[e.path,e.mode,y?y[o]:"error",y&&"error"!==y[o]?S.green("success"):S.red("error")])),console.log(W.toString()),c?console.log("finish all"):process.exit(0)}),e.parse(process.argv)});
