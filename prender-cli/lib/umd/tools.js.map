{"version":3,"file":"tools.js","sources":["../../src/tools.js"],"sourcesContent":["const fs = require(\"fs\");\nconst path = require(\"path\");\nconst compressing = require('compressing');\n\nasync function wait(time) {\n    return new Promise(resolve => {\n        setTimeout(resolve, time)\n    })\n}\n\nfunction isInstalled(packageName) {\n    try {\n        require.resolve(packageName);\n\n        return true;\n    } catch (err) {\n        return false;\n    }\n};\n\nfunction mkdirsSync(dirname) {\n    if (fs.existsSync(dirname)) {\n        return true;\n    } else {\n        if (mkdirsSync(path.dirname(dirname))) {\n            fs.mkdirSync(dirname);\n            return true;\n        }\n    }\n}\n\nfunction createFile(dir, name, data) {\n    mkdirsSync(dir);\n    if (typeof data !== \"string\") {\n        data = JSON.stringify(data);\n    }\n\n    if (fs.existsSync(path.join(dir, name))) {\n        fs.unlink(path.join(dir, name), function (err) {\n            fs.writeFileSync(path.join(dir, name), data, {})\n        });\n    } else {\n        fs.writeFileSync(path.join(dir, name), data, {})\n    }\n}\n\nfunction copyFile(target, destination, ignore) {\n    let stat = fs.statSync(target);\n    let isFile = stat.isFile();\n    let shouldSkip = ignore.includes(path.parse(target).name);\n\n    if (shouldSkip) {\n        return true;\n    }\n\n    if (isFile) {\n        fs.copyFileSync(target, destination);\n    } else {\n        mkdirsSync(destination);\n        let files = fs.readdirSync(target);\n        files.forEach(fileName => {\n            let unitTargetPath = path.join(target, fileName);\n            let unitDestPath = path.join(destination, fileName);\n            copyFile(unitTargetPath, unitDestPath, ignore);\n        })\n    }\n}\n\nfunction deleteFolder(folder){\n    let files = [];\n    if(fs.existsSync(folder)){\n      if(fs.statSync(folder).isFile()){\n        fs.unlinkSync(folder)\n        return;\n      }\n      files = fs.readdirSync(folder);\n      files.forEach(function(item){\n        const cur = folder + \"/\" + item;\n        if(fs.statSync(cur).isDirectory()){\n          deleteFolder(cur)\n        }else{\n          fs.unlinkSync(cur)\n        }\n      })\n      fs.rmdirSync(folder)\n    }\n  }\n\nfunction compress(folder){\n    return new Promise((resolve,reject) => {\n      compressing.zip.compressDir(folder, folder+'.zip')\n      .then(() => {\n        resolve('ok');\n      })\n      .catch(err => {\n          reject(err);\n          return\n      });\n    })\n}\n\nmodule.exports = {\n    wait,\n    isInstalled,\n    mkdirsSync,\n    createFile,\n    copyFile,\n    compress,\n    deleteFolder\n}"],"names":["fs","require","path","compressing","wait","time","Promise","resolve","setTimeout","isInstalled","packageName","err","mkdirsSync","dirname","existsSync","mkdirSync","createFile","dir","name","data","JSON","stringify","join","unlink","writeFileSync","copyFile","target","destination","ignore","stat","statSync","isFile","shouldSkip","includes","parse","copyFileSync","files","readdirSync","forEach","fileName","unitTargetPath","unitDestPath","deleteFolder","folder","unlinkSync","item","cur","isDirectory","rmdirSync","compress","reject","zip","compressDir","then","catch","module","exports"],"mappings":"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"}