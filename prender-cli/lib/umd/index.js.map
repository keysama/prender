{"version":3,"file":"index.js","sources":["../../src/index.js"],"sourcesContent":["const program = require(\"commander\");\nconst path = require(\"path\");\nconst fs = require('fs');\nconst Table = require('cli-table2');\nconst Prender = require(\"./prender.js\");\nconst chalk = require('chalk');\n\nconst { compress, deleteFolder } = require('./tools');\n//folder为自定义要压缩的文件夹\n\nlet table = new Table({\n  head: [ 'path', 'mode' ], \n  colWidths: [ 20, 20 ]\n})\nlet table2 = new Table({\n  head: [ 'path', 'mode', 'depent', 'status' ], \n  colWidths: [ 20, 20, 20, 20 ]\n})\n\nprogram.version('0.1.0');\n\nprogram\n  .command('build [routes...]')\n  .description('run to rerender all routes with mode')\n  .option('-p --port [port]', '临时服务端口号', 8098)\n  .option('-t --target [target]', '目标路径', path.join(process.cwd(), './target'))\n  .option('-d --delta  [delta]', '增量更新输出目录', path.join(process.cwd(), './delta'))\n  .option('-o --output [output]', '全量更新输出目录', path.join(process.cwd(), './output'))\n  .option('-f --file [file]', '指定包含routes和mode的文件位置', path.join(process.cwd(), './prender_routes.json'))\n  .option('-e --exclude [exclude...]', '忽略的文件', '.DS_Store')\n  .option('-s --show', '是否显示浏览器', false)\n  .option('-i --incremental', '开启增量更新模式', false)\n  .option('-c --clear', '开始前删除输出目录', false)\n  .option('-z --zip', '输出压缩文件', false)\n  .option('-m --mode [mode...]', '输出模式[json/inject/default]', [\"default\"])\n  .option('--timeout [timeout]', '单个路由渲染时限,0不限制', 0)\n  .option('--pool [pool]', '允许同时渲染最大数量', 5)\n  .option('--debug', 'debug模式，不自动关闭', false)\n  .action(async (routes,cmd) => {\n\n    const { file: jsonFile, mode, port, target, delta, output, show, incremental, exclude, debug, clear, zip, timeout, pool } = cmd;\n\n    let computedRoutes = [];\n\n    if(typeof mode === \"string\"){\n      computedRoutes = routes.map(item => ({\n        path : item,\n        mode : mode\n      }))\n    }else{\n      if( mode.length !== routes.length && mode.length !== 1 ){\n        console.log(chalk.red(\"illegal mode options\"))\n        return false;\n      }\n      computedRoutes = routes.map((item,key) => ({\n        path : item,\n        mode : mode[key] || mode[0]\n      }))\n    };\n\n    if(computedRoutes.length <= 0 && !fs.existsSync(jsonFile)){\n      console.log(chalk.red(\"no routes to render\"))\n    }\n\n    if(computedRoutes.length <= 0 && fs.existsSync(jsonFile)){\n      let fileContent = require(path.resolve( process.cwd(), jsonFile ));\n      if (Array.isArray(fileContent)){\n        computedRoutes = fileContent.map(item => ({ path : item, mode : mode[0] }))\n      }else{\n        computedRoutes = fileContent;\n      }\n    };\n\n    if(clear){\n      deleteFolder(output);\n      deleteFolder(delta);\n      deleteFolder(output+\".zip\");\n    }\n\n    table.push(...computedRoutes.map((item, key )=>[ item.path , item.mode ]));\n\n    process.stdout.write(table.toString() + \"\\n\")\n\n    var twirlTimer = (function() { var P = [\"\\\\\", \"|\", \"/\", \"-\"]; var x = 0; return setInterval(function() { process.stdout.write(\"\\r\" + P[x++]); x &= 3; }, 100); })();\n\n    const my = new Prender({\n      routes: computedRoutes, port, target, delta, output, show, incremental, exclude, timeout, pool, debug\n    })\n\n    const results = await my.start();\n\n    if(zip){\n      try{\n        await compress(output)\n      }catch(e){\n        throw new Error(chalk.red(\"compress error\"))\n      }\n    }\n\n    process.stdout.write(\"\\n\");\n\n    clearInterval(twirlTimer);\n\n    table2.push(...computedRoutes.map((item, key )=>[item.path, item.mode, !results ? \"error\" : results[key], !results || results[key] === \"error\" ? chalk.red(\"error\") : chalk.green('success') ]))\n\n    console.log(table2.toString())\n\n    if(!debug){\n      process.exit(0);\n    }else{\n      console.log(\"finish all\")\n    }\n    \n  })\n\nprogram.parse(process.argv);"],"names":["program","require","path","fs","Table","Prender","chalk","compress","deleteFolder","table","head","colWidths","table2","version","command","description","option","join","process","cwd","action","routes","cmd","file","jsonFile","mode","port","target","delta","output","show","incremental","exclude","debug","clear","zip","timeout","pool","computedRoutes","map","item","length","console","log","red","key","existsSync","fileContent","resolve","Array","isArray","push","stdout","write","toString","twirlTimer","P","x","setInterval","my","results","start","e","Error","clearInterval","green","exit","parse","argv"],"mappings":"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"}